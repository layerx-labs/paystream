import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { GridContainer, GridCol, GridRow, Button } from "@taikai/rocket-kit";
import useBalance from "../hooks/useETHBalance";
import useERC20Balance from "../hooks/useERC20Balance";
import { useWeb3 } from "../hooks/useWeb3";
import { dappConfig } from "../config";
import useSablier from "../hooks/useSablier";
import { TransactionReceipt } from "@taikai/dappkit/dist/src/interfaces/web3-core";
import { useCreateStreamCall } from "../hooks/sablier/mutations";
import useAddress from "../hooks/useAddress";
import { useOwnerQuery } from "../hooks/sablier/queries";
import useBlockNumber from "../hooks/useBlockNumber";

const ShowWalletDetails = ()=> {  
  const { chainId }  = useWeb3();
  const { address = "" }  = useAddress();  
  const { balance } = useBalance();
  const { contract } = useSablier(dappConfig.sablierContracAddress);
  const { owner } = useOwnerQuery(dappConfig.sablierContracAddress);
  const { mutate } = useCreateStreamCall(dappConfig.sablierContracAddress, {
    onMutate: (receipt: TransactionReceipt) => {
      //console.log(receipt);
    },
    onError: (error: Error) => {
      //console.log(error);
    },
  });
  const { blockNumber } = useBlockNumber();

  return (
    <>
      <GridRow>
        <GridCol>{chainId}</GridCol>
      </GridRow>
      <GridRow>
        <GridCol>{address}</GridCol>
      </GridRow>
      <GridRow>
        <GridCol>{balance} ETH</GridCol>
      </GridRow>
      <GridRow>
        <GridCol>{owner} Owner</GridCol>
      </GridRow>
      <GridRow>
        <GridCol>{blockNumber} Block</GridCol>
      </GridRow>
      <GridRow>
        <GridCol>
          <Button
            ariaLabel="Connect Wallet"
            className="button"
            color="green"
            querySelector=".button"
            value="Create Stream"
            variant="solid"
            action={() => {
              mutate(
                "0x37ebdd9B2adC5f8af3993256859c1Ea3BFE1465e",
                1000,
                "0x37ebdd9B2adC5f8af3993256859c1Ea3BFE1465e",
                Math.floor(Date.now() / 1000),
                1960739677
              );
            }}
          />
        </GridCol>
      </GridRow>
    </>
  );
};

const Home: NextPage = () => { 
  const {connected, connect, disconnect, error } = useWeb3();

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <GridContainer className={styles.main}>
        <GridRow>
          <GridCol>PayStream App</GridCol>
        </GridRow>
        <GridRow>
          <GridCol>
            {!connected && (
              <Button
                ariaLabel="Connect Wallet"
                className="button"
                color="green"
                querySelector=".button"
                value="Connect Wallet"
                variant="solid"
                action={()=> connect()}
              />
            )}
          </GridCol>
        </GridRow>
        {connected && <ShowWalletDetails />}         
        {connected && (
          <GridRow>
            <GridCol>
              <Button
                ariaLabel="Disconnect Wallet"
                className="button"
                color="green"
                querySelector=".button"
                value="Disconnect Wallet"
                variant="solid"
                action={() => {
                  disconnect();
                }}
              />
            </GridCol>
          </GridRow>
        )}
        {error && (
          <GridRow>
            <GridCol>
              <>Error: {error}</>
            </GridCol>
          </GridRow>
        )}       
      </GridContainer>
    </div>
  );
};

export default Home;
