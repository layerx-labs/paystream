import { mergeTypeDefs } from '@graphql-tools/merge';
import { print } from 'graphql';
import { writeFileSync } from 'fs';
import * as path from 'path';
import { sdlInputs } from './sdl-inputs';
import { getDMMF } from '@prisma/internals';

function writeOnFile({ path, content }: { path: string; content: string }) {
  writeFileSync(
    path,
    `"""
  ================================================================== 
  This file is generated by script 'gen-inputs'                     |
  Do not edit this file directly, any changes will be overwritten   |
  ==================================================================
  @generated on ${new Date().toISOString()} 
 
"""\n\n${content}`,
    {
      encoding: 'utf8',
    }
  );
}

async function start() {
  const outputPathForInputSchema = path.resolve(
    'server/graphql/generated/inputs.graphql'
  );
  const outputPathForMainSchema = path.resolve(
    'server/graphql/generated/schema.graphql'
  );

  const dmmf = await getDMMF({
    datamodelPath: path.resolve('server/prisma/schema.prisma'),
  });
  const unwantedInputSuffixes = [
    'UncheckedUpdateInput',
    'WithAggregationInput',
    'WithAggregatesInput',
    'UncheckedCreateInput',
    'UncheckedUpdateInput',
    'OrderByAggregateInput',
    'WithAggregatesFilter',
  ];

  const inputTypeDefs = mergeTypeDefs([
    sdlInputs({
      dmmf,
      filterInputs(input) {
        const regex = new RegExp(
          `^\\w+\(${unwantedInputSuffixes.join('|')}\)\\w*`,
          'g'
        );
        return regex.test(input.name) ? [] : input.fields;
      },
    }),
  ]);

  writeOnFile({
    path: outputPathForInputSchema,
    content: print(inputTypeDefs),
  });

  const { typeDefs } = await import('../graphql');
  writeOnFile({ path: outputPathForMainSchema, content: print(typeDefs) });

  console.info(
    'Generated GQL Inputs successfully',
    `see: ${outputPathForInputSchema}`
  );
}

start().then().catch(console.error);
